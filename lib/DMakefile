#
#  DMakefile
#
#  this file contains all library combinations allowed

.ifos AmigaOS

DLIB= dlib:
ALT=
LIBDEF = lib.def

.else

ALT=nofp
LIBDEF = ulib.def

$(LIBDEF): lib.def
	sed -E \
        -e 's_dtmp:_$(DTMP)_' \
		-e 's_dlib:_$(DLIB)_' \
		-e 's_dinclude:_$(DINCLUDE)_' \
        %(right) > %(left)
.endif

LBMAKE = lbmake -d $(LIBDEF)

start:
        type lib.help


# The core set of libraries needed to bootstrap DICE itself:
# the startup code, and C and M libraries in small-model stack variants.
core:       startup autos.lib cs.lib ms.lib amiga32s.lib

# The full set of libraries, including amiga32X.lib all variants.
all:        startup autos.lib c uc m rom amiga32

c:          cs.lib cl.lib csp.lib csr.lib cpl.lib crl.lib csrp.lib crpl.lib

uc:         ucs.lib ucsr.lib

m:          ms.lib ml.lib msp.lib msr.lib mpl.lib mrl.lib msrp.lib mrpl.lib

rom:        roms.lib romsr.lib roml.lib romrl.lib

amiga32:    \
            amiga32s.lib amiga32sp.lib amiga32sr.lib amiga32srp.lib \
            amiga32l.lib amiga32pl.lib amiga32rl.lib amiga32rpl.lib

startup: $(LIBDEF)
    $(LBMAKE) startup $(ALT)

autos.lib: $(LIBDEF)
    $(LBMAKE) auto s $(ALT)

autol.lib: $(LIBDEF)
    $(LBMAKE) auto l $(ALT)

cs.lib: $(LIBDEF)
    $(LBMAKE) clib s $(ALT)

cl.lib: $(LIBDEF)
    $(LBMAKE) clib l $(ALT)

csp.lib: $(LIBDEF)
    $(LBMAKE) clib s p $(ALT)

csr.lib: $(LIBDEF)
    $(LBMAKE) clib s r $(ALT)

cpl.lib: $(LIBDEF)
    $(LBMAKE) clib p l $(ALT)

crl.lib: $(LIBDEF)
    $(LBMAKE) clib r l $(ALT)

csrp.lib: $(LIBDEF)
    $(LBMAKE) clib s r p $(ALT)

crpl.lib: $(LIBDEF)
    $(LBMAKE) clib r p l $(ALT)

#   UNIX compatible C library (automatically converts UNIX style paths to
#        amiga style)

ucs.lib: $(LIBDEF)
    $(LBMAKE) uclib s $(ALT)

ucsr.lib: $(LIBDEF)
    $(LBMAKE) uclib s r $(ALT)


#   M[model].LIB
#

ms.lib: $(LIBDEF)
    $(LBMAKE) mlib s $(ALT)

ml.lib: $(LIBDEF)
    $(LBMAKE) mlib l $(ALT)

msp.lib: $(LIBDEF)
    $(LBMAKE) mlib s p $(ALT)

msr.lib: $(LIBDEF)
    $(LBMAKE) mlib s r $(ALT)

mpl.lib: $(LIBDEF)
    $(LBMAKE) mlib p l $(ALT)

mrl.lib: $(LIBDEF)
    $(LBMAKE) mlib r l $(ALT)

msrp.lib: $(LIBDEF)
    $(LBMAKE) mlib s r p $(ALT)

mrpl.lib: $(LIBDEF)
    $(LBMAKE) mlib r p l $(ALT)


#   ROM[model].LIB
#

roms.lib: $(LIBDEF)
    $(LBMAKE) rom s $(ALT)

romsr.lib: $(LIBDEF)
    $(LBMAKE) rom s r $(ALT)

roml.lib: $(LIBDEF)
    $(LBMAKE) rom l $(ALT)

romrl.lib: $(LIBDEF)
    $(LBMAKE) rom r l $(ALT)

#   AMIGA32[model].lib
#

# The "small model" amiga32.lib is derived from the NDK "large model" amiga.lib using libtos.
amiga32s.lib: $(DLIB)amiga32s.lib

$(DLIB)amiga32s.lib: $(DLIB)amiga32l.lib
    libtos %(right) %(left)

amiga32sp.lib: $(LIBDEF)
    $(LBMAKE) amiga32 s p $(ALT)

amiga32sr.lib: $(LIBDEF)
    $(LBMAKE) amiga32 s r $(ALT)

amiga32srp.lib: $(LIBDEF)
    $(LBMAKE) amiga32 s r p $(ALT)

# The "large model" amiga.lib is taken straight from the NDK and is expected to
# be pre-installed. If it is not present, show an error.
amiga32l.lib: $(DLIB)amiga32l.lib

.ifos AmigaOS
$(DLIB)amiga32l.lib: $(DLIB)amiga32l.lib
    echo "Error: expected $(DLIB)amiga32l.lib to be present. Copy amiga.lib from the NDK to this location."
    Quit 20
.else
$(DLIB)amiga32l.lib: $(DLIB)amiga32l.lib
    echo "Error: expected $(DLIB)amiga32l.lib to be present. Copy amiga.lib from the NDK to this location."
    exit 1
.endif

amiga32pl.lib: $(LIBDEF)
    $(LBMAKE) amiga32 p l $(ALT)

amiga32rl.lib: $(LIBDEF)
    $(LBMAKE) amiga32 r l $(ALT)

amiga32rpl.lib: $(LIBDEF)
    $(LBMAKE) amiga32 r p l $(ALT)

.ifos AmigaOS

clean:
    -delete $(DLIB)#?.lib
    -delete $(DLIB)#?.o

.else

clean:
    -rm $(DLIB)*.lib
    -rm $(DLIB)*.o
    -rm $(LIBDEF)

.endif
