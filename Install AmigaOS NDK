; DICE-nx Installer script

; Set some constants
(set ##dcc_assign "DCC:")
(set ##welcome_guide "Welcome to DICE-nx.guide")
(set ##choice_ndk3.2 0)
(set ##choice_adcd1.1 1)
(set ##choice_adcd1.2 2)
(set ##choice_adcd2.1 3)

; Procedures

(procedure P_install_ndk32
    (
        (set #ndkpath
            (askdir
                (prompt "Please select the location of the Amiga NDK 3.2")
                (help @askdir-help)
                (default "RAM:")
                (disk)
            )
        )
        
        (P_specific_ndk_install
            "amiga32"
            (tackon #ndkpath "Include_H")
            (tackon (tackon #ndkpath "lib") "amiga.lib")
        )
    )
)

(procedure P_install_adcd1.1
    (
        (set #adcdpath
            (askdir
                (prompt "Please select the location of the Amiga Developer CD v1.1")
                (help @askdir-help)
                (default "Amiga_Dev_CD_v1.1:")
                (disk)
            )
        )

        (set #ndkpath (tackon (tackon #adcdpath "NDK_3.1") "Includes&Libs"))
        (P_specific_ndk_install
            "amiga31"
            (tackon #ndkpath "Include_H")
            (tackon (tackon #ndkpath "linker_libs") "amiga.lib")
        )
    )
)

(procedure P_install_adcd1.2
    (
        (set #adcdpath
            (askdir
                (prompt "Please select the location of the Amiga Developer CD v1.2")
                (help @askdir-help)
                (default "ADCD_v1.2:")
                (disk)
            )
        )

        (set #ndkpath (tackon (tackon (tackon #adcdpath "NDK") "NDK_3.1") "Includes&Libs"))
        (P_specific_ndk_install
            "amiga31"
            (tackon #ndkpath "Include_H")
            (tackon (tackon #ndkpath "linker_libs") "amiga.lib")
        )

        (set #ndkpath (tackon #adcdpath "Inc&AD2.1"))
        (P_specific_ndk_install
            "amiga21"
            (tackon #ndkpath "includes")
            (tackon (tackon #ndkpath "linker_libs") "amiga.lib")
        )

        (set #ndkpath (tackon (tackon #adcdpath "NDK") "NDK_2.0"))
        (P_specific_ndk_install
            "amiga20"
            (tackon (tackon #ndkpath "NDK2.0-4") "include")
            (tackon (tackon (tackon (tackon (tackon #ndkpath "NDK2.0-2") "Development") "SupportFiles") "lib") "amiga.lib")
        )

        (set #ndkpath (tackon (tackon #adcdpath "NDK") "NDK_1.3"))
        (P_specific_ndk_install
            "amiga13"
            (tackon (tackon #ndkpath "Includes1.3") "include.h")
            (tackon (tackon (tackon #ndkpath "Include-Strip1.3") "lib") "amiga.lib")
        )
    )
)

(procedure P_install_adcd2.1
    (
        (set #adcdpath
            (askdir
                (prompt "Please select the location of the Amiga Developer CD v2.1")
                (help @askdir-help)
                (default "ADCD_2.1:")
                (disk)
            )
        )

        (set #ndkpath (tackon (tackon (tackon #adcdpath "NDK") "NDK_3.5") "Include"))
        (P_specific_ndk_install
            "amiga35"
            (tackon #ndkpath "include_H")
            (tackon (tackon #ndkpath "linker_libs") "amiga.lib")
        )

        (set #ndkpath (tackon (tackon (tackon #adcdpath "NDK") "NDK_3.1") "Includes&Libs"))
        (P_specific_ndk_install
            "amiga31"
            (tackon #ndkpath "Include_H")
            (tackon (tackon #ndkpath "linker_libs") "amiga.lib")
        )

        (set #ndkpath (tackon (tackon #adcdpath "NDK") "NDK_2.0"))
        (P_specific_ndk_install
            "amiga20"
            (tackon (tackon #ndkpath "NDK2.0-4") "include")
            (tackon (tackon (tackon (tackon (tackon #ndkpath "NDK2.0-2") "Development") "SupportFiles") "lib") "amiga.lib")
        )

        (set #ndkpath (tackon (tackon #adcdpath "NDK") "NDK_1.3"))
        (P_specific_ndk_install
            "amiga13"
            (tackon (tackon #ndkpath "Includes1.3") "include.h")
            (tackon (tackon (tackon #ndkpath "Include-Strip1.3") "lib") "amiga.lib")
        )
    )
)

(procedure P_specific_ndk_install ###ndk_id ###ndk_include_path ###ndk_lib_path
    (
        ; Check if crucial files exist
        (if (= 2 (exists ###ndk_include_path))
            (
                (if (= 1 (exists ###ndk_lib_path))
                    (
                        (makedir (tackon #dinclude_path ###ndk_id))

                        (copyfiles
                            (prompt "Copying include files")
                            (help @copyfiles-help)
                            (source ###ndk_include_path)
                            (dest (tackon #dinclude_path ###ndk_id))
                            (optional "oknodelete")
                            (all)
                        )

                        (copyfiles
                            (prompt "Copying large-model amiga.lib")
                            (help @copyfiles-help)
                            (source ###ndk_lib_path)
                            (dest #dlib_path)
                            (newname (cat ###ndk_id "l.lib"))
                            (optional "oknodelete")
                        )

                        (working "Generating small-model amiga.lib")
                        (run
                            (cat "\"" (tackon (tackon #dcc_path "bin") "libtos") "\"")
                            (cat "\"" (tackon #dlib_path (cat ###ndk_id "l.lib")) "\"")
                            (cat "\"" (tackon #dlib_path (cat ###ndk_id "s.lib")) "\"")

                            (prompt "Generating small-model amiga.lib")
                            (help @run-help)
                        )
                        (working "Finishing")
                    )
                    (message (cat
                        "Expected to find a file called "
                        ###ndk_lib_path
                        " but it was not found or it is not a file."
                        " Please check you have the correct path to the NDK."
                    ))
                    (set #choose_again 1)
                )
            )
            (message (cat
                "Expected to find a directory called "
                ###ndk_include_path
                " but it was not found or it is not a directory."
                " Please check you have the correct path to the NDK."
            ))
            (set #choose_again 1)
        )
    )
)


; Main script starts here


; Do some discovery

; Is there already a DICE or DICE-nx installation?
(set #source_location (expandpath ""))
(set #dcc_exists (exists ##dcc_assign (noreq)))
(if (<> #dcc_exists 0)
    (
        ; There's something at DCC:
        (set #dcc_path (expandpath ##dcc_assign))
        (set @default-dest #dcc_path)
        ; Try to figure out the version
        ; DICE-nx will have a "Welcome to DICE-nx.guide" file
        (if (<> 0 (tackon #dcc_path ##welcome_guide))
            (
                ; It's DICE-nx. The Welcome guide will respond to the "version" command.
                (set #dicenx_version (getversion (tackon #dcc_path ##welcome_guide)))
                (set #dcc_points_at "DICE-nx")
            )
            (
                ; It's not DICE-nx. Guess if it's an original DICE.
                (abort (cat
                    "DICE-nx does not appear to be installed (the DCC: assign is not present).\n\n"
                    "If you have just installed DICE-nx, please reboot so that the startup configuration can be run.\n\n"
                    "If you have not yet installed DICE-nx, please do so first, using the \"Install DICE-nx\" tool."
                ))
            )
        )
    )
    (
        (abort (cat
            "DICE-nx does not appear to be installed (the DCC: assign is not present).\n\n"
            "If you have just installed DICE-nx, please reboot so that the startup configuration can be run.\n\n"
            "If you have not yet installed DICE-nx, please do so first, using the \"Install DICE-nx\" tool."
        ))
    )
)
(set #dlib_path (tackon #dcc_path "dlib"))
(set #dinclude_path (tackon #dcc_path "include"))

; End of discovery

(welcome
    "Welcome to the AmigaOS NDK Installer for DICE-nx.\n"
    "Using this tool, you can load the AmigaOS NDKs into DICE-nx.\n\n"
)

(message
    "Before you can proceed, you must have a supported source of an AmigaOS NDK. "
    "You can see the supported sources on the next page. The Help button on that page "
    "can point you to some places where you can find them, if you do not currently have any."
)

(set #choose_again 1)
(while #choose_again (
    (set #operation (askchoice
        (prompt "What source would you like to use?")
        (help
            "NDK 3.2 is available on Aminet: https://aminet.net/package/dev/misc/NDK3.2\n\n"
            "The Amiga Developer CDs contain different versions of the NDK. Versions of the Amiga "
            "Developer CD that this tool understands are 1.1, 1.2 and 2.1."
        )
        (choices
            "AmigaOS NDK 3.2"
            "Amiga Developer CD v1.1"
            "Amiga Developer CD v1.2"
            "Amiga Developer CD v2.1"
            "I am finished adding NDKs"
        )
    ))
    
    (select #operation
        (P_install_ndk32)
        (P_install_adcd1.1)
        (P_install_adcd1.2)
        (P_install_adcd2.1)
        (set #choose_again 0)
    )
))

; Identify which NDKs are installed
(set #versions "")
(if (= 1 (exists (tackon #dlib_path "amiga32s.lib")))
    (set #versions (cat #versions " 3.2(Hyperion)"))
)
(if (= 1 (exists (tackon #dlib_path "amiga35s.lib")))
    (set #versions (cat #versions " 3.5(H&P)"))
)
(if (= 1 (exists (tackon #dlib_path "amiga31s.lib")))
    (set #versions (cat #versions " 3.1(AT)"))
)
(if (= 1 (exists (tackon #dlib_path "amiga30s.lib")))
    (set #versions (cat #versions " 3.0(CBM)"))
)
(if (= 1 (exists (tackon #dlib_path "amiga21s.lib")))
    (set #versions (cat #versions " 2.1(CBM)"))
)
(if (= 1 (exists (tackon #dlib_path "amiga20s.lib")))
    (set #versions (cat #versions " 2.0(CBM)"))
)
(if (= 1 (exists (tackon #dlib_path "amiga13s.lib")))
    (set #versions (cat #versions " 1.3(CBM)"))
)

(set #default_ver (askchoice
    (prompt (cat
        "The following NDKs are now available:"
        #versions
        "\n\nWhich should be selected as the default?"
    ))
    (help "Choose the NDK version that should be the default (set in the DCCOPTS environment variable in the startup sequence). Only select one that you have installed!")
    (choices
        "3.2 (Hyperion)"
        "3.5 (Haage & Partner)"
        "3.1 (Amiga Technologies)"
        "3.0 (Commodore)"
        "2.1 (Commodore)"
        "2.0 (Commodore)"
        "1.3 (Commodore)"
        "None"
    )
))
(select #default_ver
    (set #dccopts "-3.2 -//")
    (set #dccopts "-3.5 -//")
    (set #dccopts "-3.1 -//")
    (set #dccopts "-3.0 -//")
    (set #dccopts "-2.1 -//")
    (set #dccopts "-2.0 -//")
    (set #dccopts "-1.3 -//")
    (set #dccopts "" -//)
)

(startup "DICE-nx"
    (prompt "This tool will now modify startup sequence to set the selected NDK as the default.")
    (help "Sets up DICE-nx so that the chosen NDK is selected on every boot.")
    (command (cat "Assign DCC: " #dcc_path "\nExecute DCC:Dice-Startup \"" #dccopts "\""))
)

(message (cat
    "Please reboot your Amiga soon. This will complete the DICE-nx setup."
))
